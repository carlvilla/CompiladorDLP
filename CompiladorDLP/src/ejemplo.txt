/*
NOTA. Este ejemplo pretende mostrar la sintaxis del lenguaje. No está pensado para ser compilado sin errores.

- La sintaxis tiene que ser obligatoriamente la que se muestra en este ejemplo
- Las declaraciones de funciones y variables globales pueden venir en cualquier orden.
- Si la función no tiene valor de retorno no se pone nada entre los paréntesis de los parámetros y las llaves de las sentencias
- Las funciones deben tener paréntesis aunque no tengan parámetros
- Una función podrá declarar variables locales solo al inicio de su cuerpo. Por tanto no podrá haber declaración de variables locales en cualquier lugar de la función ni dentro de bloques anidados (por ejemplo el creado por un while)
- No pueden aparecer expresiones como sentencias
- Las llaves son obligatorias en el if/while aunque solo haya una sentencia dentro. También son obligatorios los paréntesis alrededor de la condición
*/

var a:int;
var b:char;

var c:[20] int;
var h:[30][20] float;


// ------------- 
struct Persona {
	edad:int;
	meses:[12] int;
};

var e1:Persona;
var e2:Persona;


var f:[10] Persona;

struct Empresa {
	cif:[20] char;
	empleados:[25] Persona;
};

var microsoft: Empresa;

// ------------- 

dobleSuma(a:int, b:int): int {
	var local:int;

	local = (a + b) * 2;
	return local * 2;
}

escribeEdad(num:int) {
	print microsoft.empleados[num].edad;
}

var z:int;

main() {
  var local: int;
  var pepe: Persona;
  var v:[20] int;

  pepe.edad = 20;
  read pepe.direccion.codigoPostal; 

  local = 0;
  while (local < 10) {
    v[local] = dobleSuma(cast<int>(2.0 + h[0][3]), local);
    local = local + 1;
  }

  if (a >= 2 && local < 5) {
    escribeEdad(a+local); 
	return;
  } else {
    b = 'R';
  }

  if (z != 2) {
    escribe(pepe.meses[2]);
  }
}
