CATEGORIES
elemento, sentencia, expresion, tipo

NODES
programa -> elemento*;

funcion:elemento -> string parametro* tipo sentencia*;
struct:elemento -> string definicion*;
atributo:elemento -> definicion;

definicion -> nombre:string tipo:tipo;
parametro -> string tipo;

if:sentencia -> condic:expresion cierto:sentencia* falso:sentencia*;
read:sentencia -> expresion;
return:sentencia -> expresion;
print:sentencia -> expresion;
while:sentencia -> expresion sentencia*;
invocar:sentencia:expresion -> string expresion*;

expresionBinaria:expresion -> left:expresion string right:expresion;
litent:expresion -> valor:int;
litchar:expresion -> valor:string;
litreal:expresion -> valor:string;
var:expresion -> nombre:string;
cast:expresion -> tipo expresion;
expresionUnaria:expresion -> expresion;
accesoArray:expresion -> contenedor:expresion posicion:expresion;
accesoStruct:expresion -> contenedor:expresion atributo:string;

array:tipo -> litent tipo;
tipoint:tipo -> ;
tiporeal:tipo -> ;
tipochar:tipo -> ;
tipoident:tipo -> ;
